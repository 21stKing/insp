
package inventory_system;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;


/**
 *
 * @author qxf3984
 */
public class NoticePanel extends JInternalFrame {
    
  private static int id;
  private static int role;
  Date logtime;
  private Connection con;
  private ResultSet rs;
  ResultSetMetaData md;
  private DefaultTableModel model_one;
  public static int []  tableRowSelected;
  public static int []  rowSelected;
  private Vector<Vector<String>> data; 
  private Vector<String> header;
  private Object ID;
  private javax.swing.JLabel noticeLabel;
     
    public NoticePanel(int idin, int roleIn) 
    {   
        id = idin;
        role = roleIn;
        logtime = new Date();

        //create headers for notice board table
        header = new Vector<String>();
        header.add("MsgID");
        header.add("Notification");
        header.add("Notice Date");
        header.add("UserID");
        
        initComponents();

        try{
          ConnectDatabase database = new ConnectDatabase();
          data = database.setNoticeTable();
          database.setCloseDatabase();
        }
        catch (Exception e_exception)
         {
          e_exception.printStackTrace();
         }
        noticeTable.setModel(new javax.swing.table.DefaultTableModel(data,header));

        this.getContentPane().setBackground(Color.white);
        setSize(835, 600); //setSize(835, 590) or setSize(714, 475); (horizontal, vertical)
        setVisible(true);
        setLocation(0, 0); 

        noticeTable.addMouseListener(new NoticePanel.NoticeTableListener());

    }

    private NoticePanel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
      public class NoticeTableListener extends MouseAdapter 
    {
     public NoticeTableListener() 
      {
      
      }
     
     public void mousePressed(MouseEvent evt) 
      {
         if ((evt.getClickCount() == 1) && (!evt.isMetaDown()))
           {
             rowSelected = NoticePanel.this.noticeTable.getSelectedRows();
           }
       }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        noticeTable = new javax.swing.JTable();
        viewButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        input_msg = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        icon_error_label = new javax.swing.JLabel();
        error_label = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setText("Set notifications  for the users(storeman or facilitators) here:");

        noticeTable.setModel(new javax.swing.table.DefaultTableModel(data,header));
        jScrollPane1.setViewportView(noticeTable);

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        input_msg.setColumns(20);
        input_msg.setRows(5);
        input_msg.setToolTipText("Type not more than 125 characters in length");
        input_msg.setWrapStyleWord(true);
        input_msg.setAutoscrolls(false);
        input_msg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                input_msgKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(input_msg);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Message:");

        error_label.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        error_label.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setText("(125 character length)");
        jLabel3.setToolTipText("Type not more than 125 characters in length");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(icon_error_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(error_label, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(204, 204, 204)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(icon_error_label, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(error_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
         // view notification 

        int row = noticeTable.getSelectedRow();
        Object notice = null;
        String noticeMsg = "";
        
        try{notice = noticeTable.getValueAt(row, 1); noticeMsg = ""+ notice;}
        catch(Exception c){System.out.println(c); }
        
        if(notice == null)
        {
          error_label.setText("");  
        } 
        else
        {
          error_label.setText(noticeMsg);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       
        int [] msgIDs = new int[rowSelected.length];
    	int learnerID = 0;
         
            for(int x = 0; x < rowSelected.length;x++)
            {
                    ID = noticeTable.getValueAt(rowSelected[x], 0);
                    learnerID = Integer.valueOf((String) ID);
                    msgIDs[x] = learnerID; 
                    //System.out.println(learnerIDs[x]);                
            }

            //remove row(s) from user table here
            model_one = (DefaultTableModel) noticeTable.getModel();
            int numRows = msgIDs.length;
            for(int i=0;i<numRows;i++)
            {
               model_one.removeRow(noticeTable.getSelectedRow());
            }

            //remove row(s) from database table
            if(rowSelected.length <= 1)
            {  
                String sgl = "DELETE * FROM notice_board WHERE MsgID = "+learnerID;
                try
                {
                   ConnectDatabase database = new ConnectDatabase(); 
                   database.setBatch(sgl); 
                   database.setCloseDatabase();
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                }
            }
            else
            {  
                for(int x = 0; x < rowSelected.length;x++)
                {  
                    String sgl = "DELETE * FROM notice_board WHERE MsgID = "+msgIDs[x];
                    try
                    {
                       ConnectDatabase database = new ConnectDatabase(); 
                       database.setBatch(sgl); 
                       database.setCloseDatabase();
                    }
                    catch(Exception ex)
                    {
                        ex.printStackTrace();
                    }
                }    
            }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
       SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
       Date currentTime = new Date();
       String theDate = formatter.format(currentTime);

    if (input_msg.getText().equals(""))
    {
       input_msg.setBorder(BorderFactory.createLineBorder(new Color(255, 0, 0), 1));
       error_label.setText("Please type in a notification message!"); 
       icon_error_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory_system/image/cancel.png")));
    }
    else
    {
      input_msg.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 1));
      error_label.setText(""); 
      icon_error_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
      
      String sql = "INSERT INTO notice_board (Notification,Notice_Date,UserID)VALUES('" + this.input_msg.getText() + "','" + theDate + "'," + id + ")";
      try
      {
        ConnectDatabase database = new ConnectDatabase();
        database.setBatch(sql);
      }
      catch (Exception ex)
      {
        JOptionPane.showMessageDialog(null, ex, "", 1);
      }
    }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void input_msgKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_input_msgKeyTyped
      input_msg.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 0));
      error_label.setText(""); 
      icon_error_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
      
      //character limit
      int maxChars = 125;
      
      AbstractDocument pDoc=(AbstractDocument)input_msg.getDocument();
      pDoc.setDocumentFilter(new DocumentSizeFilter(maxChars));
      
      
    }//GEN-LAST:event_input_msgKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoticePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoticePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoticePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoticePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoticePanel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel error_label;
    private javax.swing.JLabel icon_error_label;
    private javax.swing.JTextArea input_msg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable noticeTable;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
