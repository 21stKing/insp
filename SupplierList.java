
package inventory_system;

import static inventory_system.MainWindow.exportButton;
import static inventory_system.MainWindow.previousButton;
import static inventory_system.MainWindow.nextButton;
import static inventory_system.MainWindow.saveButton;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tebogo kekana - kinotech (Pty) Ltd.
 */
public class SupplierList extends javax.swing.JInternalFrame {
    
    private static int id;
    private static int role;
    Date logtime;
    private Vector<Vector<String>> data; 
    private Vector<String> header;
    private static ArrayList<Category> listCategories;
    MyTableModel tmodel;
    public static int []  tableRowSelected;
    DB db;
    MainWindow main;
    
    public SupplierList()  {   
        
        logtime = new Date();
        initComponents();
        setSupplierList();
        //setTableData(true);
        suppliertable.addMouseListener(new SupplierList.MyMouseListener());
        suppliertable.setModel(tmodel); 
        suppliertable.createDefaultColumnsFromModel();
        this.getContentPane().setBackground(Color.white);
    }
   
    public class MyMouseListener extends MouseAdapter {
     public MyMouseListener() 
      {
      
      }
     
     public void mousePressed(MouseEvent e){
         if ((e.getClickCount() == 1) && (!e.isMetaDown()))
           {
             tableRowSelected = SupplierList.this.suppliertable.getSelectedRows();
           }
       }
  } 
    
    private void setSupplierList(){
       //Get Items
        try
        {
          db = new DB(RunProgram.CONNECTION_MODE);
          data  = db.getSuppliers();
          listCategories = db.getCategories();
          db.close();
        }
        catch (Exception e){ e.printStackTrace(); }
        
        tmodel = new MyTableModel();
        
        for(int x =0;x<data.size();x++){
            boolean status;
            if(Integer.parseInt(data.get(x).get(8)) == 1){
                status = true;
            }else{ status = false; }
            String name    = data.get(x).get(1);
            String city    = data.get(x).get(2);
            String cat     = data.get(x).get(3);
            String conname   = data.get(x).get(4);
            String email   = data.get(x).get(5);
            String tel     = data.get(x).get(6);
            String mobile    = data.get(x).get(7);
            tmodel.addRow( new Object[] { name, city, cat, conname, email, tel, mobile, status} );
        }
       
        
        //Activate table on main screen
        MainWindow.setActiveTable(suppliertable);
        
    }
    
    private String getCategoryByID(int catid){
        String category = "";
        for(int x = 0;x<listCategories.size();x++){
            if(listCategories.get(x).getCatid() == catid){
                category = listCategories.get(x).getCatname();
            }
        }
        
        return category;
    }
   

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        action_popupmenu = new javax.swing.JPopupMenu();
        edit_supplier_menu = new javax.swing.JMenuItem();
        delete_supplier_menu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        add_quote_supplier_menu = new javax.swing.JMenuItem();
        add_invoice_supplier_menu = new javax.swing.JMenuItem();
        add_receipt_supplier_menu = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        quick_report_supplier_menu = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        addSupplier = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        suppliertable = new javax.swing.JTable();

        edit_supplier_menu.setText("Edit");
        edit_supplier_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_supplier_menuActionPerformed(evt);
            }
        });
        action_popupmenu.add(edit_supplier_menu);

        delete_supplier_menu.setText("Delete");
        action_popupmenu.add(delete_supplier_menu);
        action_popupmenu.add(jSeparator2);

        add_quote_supplier_menu.setText("Add Quote");
        action_popupmenu.add(add_quote_supplier_menu);

        add_invoice_supplier_menu.setText("Add Invoice");
        action_popupmenu.add(add_invoice_supplier_menu);

        add_receipt_supplier_menu.setText("Add Receipt");
        action_popupmenu.add(add_receipt_supplier_menu);
        action_popupmenu.add(jSeparator3);

        quick_report_supplier_menu.setText("Quick Report");
        action_popupmenu.add(quick_report_supplier_menu);

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createEtchedBorder()));
        setTitle("Supplier List");
        setPreferredSize(MainWindow.home_desktop.getPreferredSize());

        jLabel1.setText("List of Suppliers");

        addSupplier.setText("Add New Supplier");
        addSupplier.setToolTipText("Add a new supplier");
        addSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSupplierActionPerformed(evt);
            }
        });

        suppliertable.setModel(new javax.swing.table.DefaultTableModel(data,header));
        suppliertable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        suppliertable.setComponentPopupMenu(action_popupmenu);
        jScrollPane1.setViewportView(suppliertable);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addSupplier, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 101, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSupplier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSupplierActionPerformed
        this.dispose();
        MainWindow.supplierInternalFrame();
        MainWindow.supplier.supplier_title.setText("New Supplier"); 
        MainWindow.supplier.setMode(0); //edit mode, very important. 
        exportButton.setEnabled(false); 
        previousButton.setEnabled(true);
        nextButton.setEnabled(false);
        saveButton.setEnabled(true);
    }//GEN-LAST:event_addSupplierActionPerformed

    private void edit_supplier_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_supplier_menuActionPerformed
        int row = SupplierList.this.suppliertable.getSelectedRow();
        Object selectedvalue = SupplierList.this.suppliertable.getValueAt(row,0);
        String code = (String) selectedvalue;
        int suppid  =  getSuppID(code);
        
        this.dispose(); 
        MainWindow.supplierInternalFrame();
        /*Customers customers = new Customers();
        customers.setVisible(true);
        customers.setSize(MainWindow.home_desktop.getWidth(), MainWindow.home_desktop.getHeight()); 
        ((BasicInternalFrameUI)customers.getUI()).setNorthPane(null);
        MainWindow.home_desktop.add(customers);
        try {
             customers.setSelected(true); 
            }
        catch (PropertyVetoException e) {e.printStackTrace(); }*/
        
        MainWindow.supplier.supplier_title.setText("Edit Supplier - "+code); 
        MainWindow.supplier.setMode(1); //edit mode, very important. 
        MainWindow.supplier.setSupplier(suppid);         
        exportButton.setEnabled(false); 
        previousButton.setEnabled(true);
        nextButton.setEnabled(false);
        saveButton.setEnabled(true);
    }//GEN-LAST:event_edit_supplier_menuActionPerformed
    
    private int getSuppID(String code){
        int id = 0;
        for(int x = 0;x< data.size();x++){
            if(data.get(x).elementAt(1) == code){
                id = Integer.parseInt(data.get(x).elementAt(0));
            }
        }
        
        return id;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu action_popupmenu;
    private javax.swing.JButton addSupplier;
    private javax.swing.JMenuItem add_invoice_supplier_menu;
    private javax.swing.JMenuItem add_quote_supplier_menu;
    private javax.swing.JMenuItem add_receipt_supplier_menu;
    private javax.swing.JMenuItem delete_supplier_menu;
    private javax.swing.JMenuItem edit_supplier_menu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuItem quick_report_supplier_menu;
    private javax.swing.JTable suppliertable;
    // End of variables declaration//GEN-END:variables

    public class MyTableModel extends DefaultTableModel {

    public MyTableModel() {
      //super(new String[]{"Field", "Data Type", "Primary Key"}, 0);
      super(new String[]{"Name", "City","Category", "Contact Name", "E-Mail", "Telephone","Mobile" ,"Active"}, 0);
    }

    @Override
    public Class<?> getColumnClass(int columnIndex) {
      Class clazz = String.class;
      switch (columnIndex) {
        case 0:
          clazz = String.class;
          break;
        case 7:
          clazz = Boolean.class;
          break;
      }
      return clazz;
    }

    @Override
    public boolean isCellEditable(int row, int column) {
      return false;
    }

    @Override
    public void setValueAt(Object aValue, int row, int column) {
      if (aValue instanceof Boolean && column == 2) {
        System.out.println(aValue);
        Vector rowData = (Vector)getDataVector().get(row);
        rowData.set(2, (boolean)aValue);
        fireTableCellUpdated(row, column);
      }
      else{
          Vector rowData = (Vector)getDataVector().get(row);
          rowData.set(column, aValue);
          fireTableCellUpdated(row, column);
         
      }
    }

  }
    
    private boolean hasSpace(String table_field)     { 
       boolean answer; 
       if(table_field.contains(" ")){ 
           answer = true;
       }else{
         answer =false;
    }
     return answer;  
   }
}
