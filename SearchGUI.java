/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory_system;

import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author qxf3984
 */
public class SearchGUI extends javax.swing.JFrame {
    
    private static int id;
    private static int role;
    Date logtime;
    public static int []  rowSelected;
    private Vector<Vector<Object>> data; 
    private Vector<String> header;
    private Object ID;
    private DefaultTableModel model;
   
    
    
    
    
    public SearchGUI(int idin, int roleIn) 
    {
        id      = idin;
        role = roleIn;
        logtime = new Date();
        model = new javax.swing.table.DefaultTableModel(data,header);
        //create headers for search table
        header = new Vector<String>();
        header.add("ItemID");
        header.add("Store");
        header.add("Location / Bin");
        header.add("Description");
        header.add("Current");
        header.add("Creator");
       

        initComponents();
        
        
        
        this.getContentPane().setBackground(Color.white);  //sets layout background color to white
    }

    private SearchGUI() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        previousLabel = new javax.swing.JLabel();
        searchLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        comboBox_store = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        textfield_location = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textfield_description = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory_system/image/excel-8.png"))); // NOI18N
        jLabel1.setToolTipText("export search results to  excl ");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));

        previousLabel.setBackground(java.awt.Color.white);
        previousLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory_system/image/previous.png"))); // NOI18N
        previousLabel.setToolTipText("Go back");
        previousLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousLabelMouseClicked(evt);
            }
        });

        searchLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory_system/image/search_blue.png"))); // NOI18N
        searchLabel.setToolTipText("Search");
        searchLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchLabelMouseClicked(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(java.awt.Color.white);
        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("Store");

        comboBox_store.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Tool store", "Consumable store", "Equipment store" }));

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setText("Location");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("Search Item");

        searchTable.setModel(new javax.swing.table.DefaultTableModel(data,header));
        searchTable.setAlignmentX(11.0F);
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(searchTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(previousLabel)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1)
                                .addGap(420, 420, 420)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(139, 139, 139)
                                            .addComponent(jLabel4)))
                                    .addGap(83, 83, 83)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(comboBox_store, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(textfield_location, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(textfield_description, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(searchLabel))
                                .addComponent(jScrollPane1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboBox_store, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textfield_location, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfield_description, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(searchLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previousLabel)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchLabelMouseClicked
        // Search
        
      String comboBox_store_item = (String)comboBox_store.getSelectedItem();
      String textfield_location_item = textfield_location.getText();
      if (textfield_location_item.equals(""))
      {
        textfield_location_item = "%";
      }
      String textfield_description_item = textfield_description.getText();
      String sgl_string = "";

      try
      {
        ConnectDatabase database = new ConnectDatabase();
        
         if (!comboBox_store_item.equals("All"))
        {
          sgl_string = sgl_string + " Store like '%" + comboBox_store_item + "%'";
        }
        if (!textfield_location_item.equals(""))
        {
          if (!sgl_string.equals("")) {
            sgl_string = sgl_string + " AND";
          }
          sgl_string = sgl_string + " `Location / Bin` like '" + textfield_location_item + "'";
        }

        if (!textfield_description_item.equals(""))
        {
          if (!sgl_string.equals("")) {
            sgl_string = sgl_string + " AND";
          }
          sgl_string = sgl_string + " Description like '%" + textfield_description_item + "%'";
        }
        
        data = database.setSearchTable(sgl_string, "data_store_01");
        database.setCloseDatabase();
      }
      catch (Exception e_exception)
      {
        e_exception.printStackTrace();
      }   
      
     searchTable.setModel(new javax.swing.table.DefaultTableModel(data,header));   
     //searchTable.getColumnModel().getColumn(6).setCellRenderer(new ImageRenderer());  //set column 6 (Item Picture) to an image of the item
    
        
    }//GEN-LAST:event_searchLabelMouseClicked
   
   /** class ImageRenderer extends DefaultTableCellRenderer 
    {       
        JLabel lbl = new JLabel();
        
        ImageIcon icon = null;
        //ImageIcon icon = new ImageIcon(getClass().getResource("/inventory_system/image/warning.png"));
        //ImageIcon icon = new ImageIcon(getClass().getResource(File.separator+""+File.separator +"africa.bmw.corp"+ File.separator +"winfs"+ File.separator +"ZA-data"+ File.separator +"ZA-P"+ File.separator +"ZA-P-5"+ File.separator +"ZA-P-50"+ File.separator +"ZA-P-503"+ File.separator +"Share"+ File.separator +"1.2 Projects"+ File.separator +"2012"+ File.separator +"Tebogo Kekana"+ File.separator +"Images"+ File.separator +"0.jpg")); 
       
        public void getImage(int row)
        {
           int id = data.size();
           Vector<Object> value = data.elementAt(row);
           String longString = value.toString();
           String [] splitString = longString.split(",");
           String splitter = splitString[6];        
           String [] splitToImg = splitter.split("]");
           System.out.println(splitToImg[0]);
           icon = new ImageIcon(splitToImg[0]);

        }
        
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
        {    
            lbl.setHorizontalAlignment(SwingConstants.CENTER); 
            getImage(row);
            lbl.setIcon(icon); 
            
            return lbl;
        }
      
    }*/
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // cancel
        MainWindow main = new MainWindow(id,role,logtime);
        main.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void previousLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousLabelMouseClicked
        // Back
        
        MainWindow main = new MainWindow(id,role,logtime);
        main.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_previousLabelMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // export
        
      boolean help = false;
      int count = 1;
      model = (DefaultTableModel) searchTable.getModel();
      
      while (!help)
      {
        File file = new File(FileSystemView.getFileSystemView().getHomeDirectory().getAbsolutePath() + "\\results" + count + ".xls");
        try
        {
          FileWriter out = new FileWriter(file);
          for (int i = 0; i < model.getColumnCount(); i++)
          {
            out.write(model.getColumnName(i) + "\t");
          }
          out.write("\n");
          for (int i = 0; i < model.getRowCount(); i++) 
          {
            for (int j = 0; j < model.getColumnCount(); j++) 
            {
              out.write(model.getValueAt(i, j) + "\t");
            }
            out.write("\n");
          }
          out.close();
          String command = "cmd /c \"" + file.getPath() + "\"";
          Runtime.getRuntime().exec(command);
          help = true;
        }
        catch (IOException e1)
        {
          count++;
        }
      }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void searchTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMousePressed
        // mouse listener on row selected
      
     if ((evt.getClickCount() == 2) && (!evt.isMetaDown()))
      {
        int row = SearchGUI.this.searchTable.getSelectedRow();
        String locationdata = null;
        String descriptiondata = null;
        String storedata = null;
        String currentdata = null;
       
        try
        {
          ConnectDatabase database = new ConnectDatabase();

          String location = (String)SearchGUI.this.searchTable.getValueAt(row, 2);
          int ID = database.getID(location);
          locationdata = database.getCheckData(ID, "`Location / Bin`");
          descriptiondata = database.getCheckData(ID, "Description");
          storedata = database.getCheckData(ID, "Store");
          currentdata = database.getCheckData(ID, "Current");

          MainWindow main = new MainWindow( UserLog.id,UserLog.role, UserLog.logfirst);
          this.setVisible(false);
          main.setVisible(true);
          //main.setCheckData(locationdata, descriptiondata, storedata, currentdata);
          database.setCloseDatabase();
        }
        catch (Exception e2)
        {
          e2.printStackTrace();
        }
      }
        
        
        
    }//GEN-LAST:event_searchTableMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBox_store;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel previousLabel;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTable searchTable;
    private javax.swing.JTextField textfield_description;
    private javax.swing.JTextField textfield_location;
    // End of variables declaration//GEN-END:variables
}
